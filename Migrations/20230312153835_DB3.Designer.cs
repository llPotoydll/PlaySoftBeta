// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PlaySoftBeta.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230312153835_DB3")]
    partial class DB3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlaySoftBeta.Models.Playlist", b =>
                {
                    b.Property<int>("playlistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("playlistID"));

                    b.Property<int>("UKID")
                        .HasColumnType("int");

                    b.Property<int>("UserUKID")
                        .HasColumnType("int");

                    b.Property<double>("playListDuration")
                        .HasColumnType("float");

                    b.Property<string>("playListName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("playlistDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("privacity")
                        .HasColumnType("bit");

                    b.HasKey("playlistID");

                    b.HasIndex("UserUKID");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("PlaySoftBeta.Models.PlaylistLines", b =>
                {
                    b.Property<int>("playlistID")
                        .HasColumnType("int");

                    b.Property<int>("songID")
                        .HasColumnType("int");

                    b.HasKey("playlistID", "songID");

                    b.HasIndex("songID");

                    b.ToTable("PlaylistLines");
                });

            modelBuilder.Entity("PlaySoftBeta.Models.Song", b =>
                {
                    b.Property<int>("songID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("songID"));

                    b.Property<DateTime>("publicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("songName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("songID");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("PlaySoftBeta.Models.User", b =>
                {
                    b.Property<int>("UKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UKID"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UKID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlaySoftBeta.Models.Playlist", b =>
                {
                    b.HasOne("PlaySoftBeta.Models.User", "User")
                        .WithMany("Playlists")
                        .HasForeignKey("UserUKID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PlaySoftBeta.Models.PlaylistLines", b =>
                {
                    b.HasOne("PlaySoftBeta.Models.Playlist", "Playlist")
                        .WithMany("PlaylistLines")
                        .HasForeignKey("playlistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaySoftBeta.Models.Song", "Song")
                        .WithMany("PlaylistLines")
                        .HasForeignKey("songID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("PlaySoftBeta.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistLines");
                });

            modelBuilder.Entity("PlaySoftBeta.Models.Song", b =>
                {
                    b.Navigation("PlaylistLines");
                });

            modelBuilder.Entity("PlaySoftBeta.Models.User", b =>
                {
                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
